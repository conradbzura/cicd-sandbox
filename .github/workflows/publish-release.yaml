name: Build and publish a release

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      prerelease:
        required: false
        type: boolean
        default: false
    secrets:
      token:
        required: true

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          persist-credentials: false
          ref: ${{ inputs.version }}

      - name: Install uv & prepare python
        uses: astral-sh/setup-uv@v5

      - name: Build distribution artifacts
        run: uv build

      - name: Store distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distributions
          path: dist/

  publish-to-pypi:
    name: Publish distribution to PyPI
    runs-on: ubuntu-latest
    needs: 
    - build
    environment:
      name: pypi
    permissions:
      id-token: write
    
    steps:
    - name: Download distribution artifacts
      uses: actions/download-artifact@v4
      with:
        name: distributions
        path: dist/
    - name: Upload distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-github:
    name: Publish distribution to GitHub
    runs-on: ubuntu-latest
    needs: 
    - publish-to-pypi
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download distribution artifacts
      uses: actions/download-artifact@v4
      with:
        name: distributions
        path: dist/

    - name: Sign the artifacts with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: ./dist/*.tar.gz ./dist/*.whl

    - name: Create GitHub release
      run: |
        if [ "${{ inputs.prerelease }}" = "true" ]; then
          prerelease_flag="--prerelease"
        else
          prerelease_flag=""
        fi
        gh release create ${{ github.ref_name }} --verify-tag \
        --repo ${{ github.repository }} \
        --target ${{ github.sha }} \
        --generate-notes \
        $prerelease_flag
 
    - name: Upload artifact signatures to GitHub release
      run: gh release upload ${{ github.ref_name }} dist/** --repo ${{ github.repository }}
